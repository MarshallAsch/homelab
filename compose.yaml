name: homelab

services:

######################################################
#     DATABASES
#     192.168.4.20-29
######################################################
  mariadb:
    image: linuxserver/mariadb
    container_name: mariadb
    networks:
      - internal
    environment:
      - PUID
      - PGID
      - TZ
    volumes:
      - ${CONFIG_VOLUMES}/mariadb:/config
    restart: unless-stopped
    labels:
      - "traefik.enable=false"

  inventory_db:
    image: linuxserver/mariadb
    networks:
      - road2ir_internal
    environment:
      - PUID
      - PGID
      - TZ
      - MYSQL_DATABASE=${INVENTORY_DB}
      - MYSQL_USER=${INVENTORY_USER}
      - MYSQL_PASSWORD=${INVENTORY_PASSWORD}
    volumes:
      - ${CONFIG_VOLUMES}/road2ir/db:/config
    restart: unless-stopped
    labels:
      - "traefik.enable=false"

  inventory_demo_db:
    image: linuxserver/mariadb
    networks:
      - road2ir_internal
    environment:
      - PUID
      - PGID
      - TZ
      - MYSQL_DATABASE=${INVENTORY_DB}
      - MYSQL_USER=${INVENTORY_USER}
      - MYSQL_PASSWORD=${INVENTORY_DEMO_PASSWORD}
    volumes:
      - ${CONFIG_VOLUMES}/road2ir_demo/db:/config
    restart: unless-stopped
    labels:
      - "traefik.enable=false"

  pigi_db:
    image: linuxserver/mariadb
    networks:
      - pigi_internal
    environment:
      - PUID
      - PGID
      - TZ
      - MYSQL_DATABASE=${INVENTORY_DB}
      - MYSQL_USER=${INVENTORY_USER}
      - MYSQL_PASSWORD=${PIGI_PASSWORD}
    volumes:
      - ${CONFIG_VOLUMES}/pigi/db:/config
    restart: unless-stopped
    labels:
      - "traefik.enable=false"


  mongo:
    image: mongo
    container_name: mongo
    mem_limit: 500m
    networks:
      lab_net:
        ipv4_address: ${SUBNET}.21
    environment:
      - PUID
      - PGID
      - TZ
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=password
    volumes:
      - ${CONFIG_VOLUMES}/mongo:/data/db
    profiles:
      - temp
    ports:
      - 27017:27017
    restart: unless-stopped
    labels:
      - "traefik.enable=false"

  mariadb_photos:
    image: linuxserver/mariadb
    container_name: mariadb_photos
    profiles:
      - temp
    networks:
      lab_net:
        ipv4_address: ${SUBNET}.22
    #command: mysqld --transaction-isolation=READ-COMMITTED --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --max-connections=512 --innodb-rollback-on-timeout=OFF --innodb-lock-wait-timeout=120
    environment:
      - PUID
      - PGID
      - TZ
      - MYSQL_ROOT_PASSWORD=insecure
      - MYSQL_DATABASE=photoprism
      - MYSQL_USER=photoprism
      - MYSQL_PASSWORD=insecure
    volumes:
      - ${CONFIG_VOLUMES}/mariadb_photos:/config
    restart: unless-stopped
    labels:
      - "traefik.enable=false"

  mongo_botomir:
    image: mongo:5.0
    container_name: mongo_botomir
    profiles:
      - temp
    #mem_limit: 500m
    networks:
      lab_net:
        ipv4_address: ${SUBNET}.23
    environment:
      - TZ
      - MONGO_INITDB_DATABASE=discordbot
    volumes:
      - ${CONFIG_VOLUMES}/mongo_botomir/db:/data/db
      - ${CONFIG_VOLUMES}/mongo_botomir/mongo_init.js:/docker-entrypoint-initdb.d/init.js
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo mongo_botomir:27017/test --quiet
      timeout: 5s
      retries: 3
      interval: 10s
      start_period: 2s
    restart: unless-stopped
    labels:
      - "traefik.enable=false"

  authelia_redis:
    image: redis:7.2-alpine
    networks:
      - authelia_internal
    mem_limit: 2g
    restart: unless-stopped
    environment:
      - TZ

  unifi-db:
    image: mongo:7.0.11
    networks:
      unifi: {}
    environment:
      - PUID
      - PGID
      - TZ
    volumes:
      - ${CONFIG_VOLUMES}/unifi/db:/data/db
      - ${CONFIG_VOLUMES}/unifi/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    ports:
      - 27017:27017
    restart: unless-stopped
    labels:
      - "traefik.enable=false"

  openldap:
    image: osixia/openldap:latest
    hostname: ldap.marshallasch.ca
    volumes:
      - ${CONFIG_VOLUMES}/ldap/db:/var/lib/ldap
      - ${CONFIG_VOLUMES}/ldap/conf:/etc/ldap/slapd.d
    networks:
      - authelia_internal
    restart: unless-stopped
    environment:
      TZ: ${TZ}
      LDAP_ORGANISATION: "Marshall Asch Homelab"
      LDAP_DOMAIN: "marshallasch.ca"
      LDAP_BASE_DN: "dc=marshallasch,dc=ca"
      LDAP_OPENLDAP_UID: "${PUID}"
      LDAP_OPENLDAP_GID: "${PGID}"
      LDAP_ADMIN_PASSWORD: "${LDAP_ADMIN_PASSWORD}" # password for admin@domain.tld
      LDAP_CONFIG_PASSWORD: "${LDAP_CONFIG_PASSWORD}" # password for config (not sure what this does)
      LDAP_TLS_VERIFY_CLIENT: "try"
      LDAP_READONLY_USER: "false"
      LDAP_RFC2307BIS_SCHEMA: "true"
      LDAP_REMOVE_CONFIG_AFTER_SETUP: "false"

######################################################
#     PROXIES
#     192.168.4.30-39
######################################################

  traefik:
    container_name: traefik
    image: traefik:v2.10
    networks:
      plex_internal: {}
      ingress: {}
      lab_net:
        ipv4_address: ${SUBNET}.30
    environment:
      - TZ
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--accesslog=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.docker.defaultRule=Host(`{{ trimSuffix \"-docker\" .Name }}.home`)"
      - "--entrypoints.web.address=:80"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.traefik.loadbalancer.server.port=8080"
      - "traefik.http.services.traefik.loadbalancer.server.scheme=http"

  letsencrypt:
    image: linuxserver/swag
    container_name: letsencrypt
    networks:
      plex_internal: {}
      road2ir_internal: {}
      ingress: {}
      lab_net:
        ipv4_address: ${SUBNET}.31
    cap_add:
      - NET_ADMIN
    environment:
      - PUID
      - PGID
      - TZ
      - URL=${DOMAIN}
      - SUBDOMAINS=ombi,files,ha,home,collabora,botomir,photoprism
      - EXTRA_DOMAINS=inventory.road2ir.org,demo.road2ir.org,inventory.pigilab.com
      - VALIDATION=http
      - ONLY_SUBDOMAINS=true
      - EMAIL=${EMAIL}
    volumes:
      - ${CONFIG_VOLUMES}/letsencrypt/config:/config
    restart: unless-stopped
    labels:
      - "traefik.enable=false"

######################################################
#     NON WEB
#     192.168.4.40-49
######################################################
  calibre-backend:
    image: linuxserver/calibre
    container_name: calibre-backend
    profiles:
      - temp
    networks:
      lab_net:
        ipv4_address: ${SUBNET}.40
    environment:
      - PUID
      - PGID
      - TZ
    volumes:
      - ${CONFIG_VOLUMES}/calibre/watch:/watch
      - ${CONFIG_VOLUMES}/calibre/config:/config
    restart: unless-stopped
    labels:
      - "traefik.enable=false"

  diun:
    image: crazymax/diun:latest
    container_name: diun
    command: serve
    networks:
      - egress
    volumes:
      - ${CONFIG_VOLUMES}/diun:/data
      - "/var/run/docker.sock:/var/run/docker.sock"
    environment:
      - TZ
      - "DIUN_WATCH_SCHEDULE=0 18 * * 1,4"
      - DIUN_PROVIDERS_DOCKER=true
      - DIUN_NOTIF_DISCORD_WEBHOOKURL=${DISCORD_URL}
      - DIUN_NOTIF_DISCORD_TEMPLATEBODY=An update is available for the {{ if .Entry.Image.HubLink }}[**{{ .Entry.Image }}**]({{ .Entry.Image.HubLink }}){{ else }}**{{ .Entry.Image }}**{{ end }}  on {{ .Entry.Image.Domain }}.
      - DIUN_PROVIDERS_DOCKER_WATCHBYDEFAULT=true
    restart: always

  minecraft:
    image: itzg/minecraft-server:latest
    container_name: minecraft
    profiles:
      - temp
    networks:
      lab_net:
        ipv4_address: ${SUBNET}.41
    ports:
      - 25565:25565
    volumes:
      - ${CONFIG_VOLUMES}/direwolf20_1_19b:/data
    environment:
      - TZ
      - MEMORY=8G
      - EULA=TRUE
      - ONLINE_MODE=TRUE
      - TYPE=FTBA
      - FTB_MODPACK_ID=101
      - FTB_MODPACK_VERSION_ID=2342
      - MOTD="Our amazing house minecraft server"
      # - OPS="cb983183-3e15-4d0d-b16e-74fe031a0937,20c39344-2548-4ddb-b3a6-3315ee664ee3"
    restart: always

######################################################
#     INTERNAL ACCESS
#     192.168.4.100
######################################################
  sonarr:
    image: linuxserver/sonarr
    container_name: sonarr
    networks:
      - plex_internal
      - egress
    environment:
      - PUID
      - PGID
      - TZ
    volumes:
      - ${CONFIG_VOLUMES}/sonarr:/config
      - ${MASS_VOLUMES}/plex:/plex
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.sonarr.loadbalancer.server.port=8989"

  radarr:
    image: linuxserver/radarr
    container_name: radarr
    networks:
      - plex_internal
      - egress
    environment:
      - PUID
      - PGID
      - TZ
    volumes:
      - ${CONFIG_VOLUMES}/radarr:/config
      - ${MASS_VOLUMES}/plex:/plex
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.radarr.loadbalancer.server.port=7878"

  lidarr:
    image: linuxserver/lidarr
    networks:
      - plex_internal
      - egress
    environment:
      - PUID
      - PGID
      - TZ
    volumes:
      - ${CONFIG_VOLUMES}/lidarr:/config
      - ${MASS_VOLUMES}/plex:/plex
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.lidarr.loadbalancer.server.port=8686"

  unpackerr:
    image: golift/unpackerr
    networks:
      - plex_internal
    user: ${PUID}:${PGID}
    environment:
      - TZ
    volumes:
      - ${CONFIG_VOLUMES}/unpackerr:/config
      - ${MASS_VOLUMES}/plex:/plex
    restart: unless-stopped

  bazarr:
    image: linuxserver/bazarr
    networks:
      - plex_internal
      - egress
    environment:
      - PUID
      - PGID
      - TZ
    volumes:
      - ${CONFIG_VOLUMES}/bazarr:/config
      - ${MASS_VOLUMES}/plex:/plex
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.bazarr.loadbalancer.server.port=8686"

  prowlarr:
    image: linuxserver/prowlarr
    networks:
      plex_internal: {}
      egress: {}
      lab_net:
        ipv4_address: ${SUBNET}.143

    environment:
      - PUID
      - PGID
      - TZ
    volumes:
      - ${CONFIG_VOLUMES}/prowlarr:/config
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.sonarr.loadbalancer.server.port=9696"

  jackett:
    image: linuxserver/jackett
    container_name: jackett
    networks:
      plex_internal: {}
      egress: {}
      lab_net:
        ipv4_address: ${SUBNET}.144

    environment:
      - PUID
      - PGID
      - TZ
    volumes:
      - ${CONFIG_VOLUMES}/jackett/config:/config
      - ${CONFIG_VOLUMES}/jackett/torrents:/downloads
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.jackett.loadbalancer.server.port=9117"

  unifi:
    image: linuxserver/unifi-network-application:latest
    mem_limit: 2g
    networks:
      unifi: {}
      lab_net:
        ipv4_address: ${SUBNET}.103
        aliases:
          - thanatos
    depends_on:
      - unifi-db
    environment:
      - PUID
      - PGID
      - MONGO_USER=unifi
      - MONGO_PASS=$UNIFI_DB_PASS
      - MONGO_HOST=unifi-db
      - MONGO_PORT=27017
      - MONGO_DBNAME=unifi
    volumes:
      - ${CONFIG_VOLUMES}/unifi/new:/config
    ports:
      - 3478:3478/udp
      - 10001:10001/udp
      - 8080:8080
      - 8081:8081
      - 8443:8443
      - 8843:8843
      - 8880:8880
      - 6789:6789
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.unifi.loadbalancer.server.port=8443"
      - "traefik.http.services.unifi.loadbalancer.server.scheme=https"

  transmission:
    image: haugene/transmission-openvpn:latest
    container_name: transmission
    networks:
      - plex_internal
      - egress
    cap_add:
      - net_admin
    environment:
      - PUID
      - PGID
      - TZ
      - OPENVPN_PROVIDER=NORDVPN
      - NORDVPN_COUNTRY=CA
      - NORDVPN_CATEGORY=legacy_p2p
      - NORDVPN_PROTOCOL=tcp
      - OPENVPN_USERNAME=${VPN_USER}
      - OPENVPN_PASSWORD=${VPN_PASSWORD}
      - "LOCAL_NETWORK=${SUBNET}.0/24,192.168.1.0/24"
      - "OPENVPN_OPTS=--inactive 3600 --ping 10 --ping-exit 60"
      - "TRANSMISSION_DOWNLOAD_QUEUE_ENABLED=30"
      - "TRANSMISSION_MAX_PEERS_GLOBAL=400"
      - "TRANSMISSION_SCRAPE_PAUSED_TORRENTS_ENABLED=false"
    volumes:
      - ${MASS_VOLUMES}/plex/downloads:/data
      - ${CONFIG_VOLUMES}/vpn2:/data/transmission-home
      - ${CONFIG_VOLUMES}/jackett/torrents:/data/watch
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.transmission.loadbalancer.server.port=9091"

  led:
    image: marshallasch/led-controller
    container_name: led
    profiles:
      - temp
    networks:
      lab_net:
        ipv4_address: ${SUBNET}.105
    environment:
      - TZ
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.led.loadbalancer.server.port=8080"

  # This is for the catch all for the lab home page
  heimdall:
    image: linuxserver/heimdall
    networks:
      - plex_internal
    environment:
      - PUID
      - PGID
      - TZ
    volumes:
      - ${CONFIG_VOLUMES}/heimdall:/config
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.heimdall.loadbalancer.server.port=80"
      - "traefik.http.routers.heimdall.priority=1"
      - "traefik.http.routers.heimdall.rule=HostRegexp(`{subdomain:[a-z]+}.home`)"

  papermerge:
    image: linuxserver/papermerge
    container_name: papermerge
    profiles:
      - temp
    networks:
      lab_net:
        ipv4_address: ${SUBNET}.107
    environment:
      - PUID
      - PGID
      - TZ
    volumes:
      - ${CONFIG_VOLUMES}/papermerge:/config
      - ${MASS_VOLUMES}/papermerge:/data
    restart: unless-stopped
    labels:
       - "traefik.enable=true"
       - "traefik.http.services.papermerge.loadbalancer.server.port=8000"

  paperless:
    image: linuxserver/paperless-ng
    container_name: paperless
    profiles:
      - temp
    networks:
      lab_net:
        ipv4_address: ${SUBNET}.108
    environment:
      - PUID
      - PGID
      - TZ
    volumes:
      - ${CONFIG_VOLUMES}/paperless:/config
      - ${MASS_VOLUMES}/paperless:/data
    restart: unless-stopped
    labels:
       - "traefik.enable=true"
       - "traefik.http.services.paperless.loadbalancer.server.port=8000"

  radarr4k:
    image: linuxserver/radarr
    container_name: radarr4k
    networks:
      - plex_internal
      - egress
    environment:
      - PUID
      - PGID
      - TZ
    volumes:
      - ${CONFIG_VOLUMES}/radarr_4k:/config
      - ${MASS_VOLUMES}/plex:/plex
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.radarr4k.loadbalancer.server.port=7878"

  ldap-user-manager:
    image: wheelybird/ldap-user-manager:latest
    networks:
      - authelia_internal
      - plex_internal
    restart: unless-stopped
    depends_on:
      - openldap
    environment:
      TZ: ${TZ}
      SERVER_HOSTNAME: "home.marshallasch.ca" # url for webui
      SERVER_PATH: "/ldap"
      ORGANISATION_NAME: "Marshall Asch Homelab" # Org name
      LDAP_URI: "ldap://openldap"
      LDAP_BASE_DN: "dc=marshallasch,dc=ca" # edit domain tld same as above
      LDAP_ADMINS_GROUP: "admins" # admin group
      LDAP_ADMIN_BIND_DN: "cn=admin,dc=marshallasch,dc=ca" # edit domain tld
      LDAP_ADMIN_BIND_PWD: "${LDAP_ADMIN_PASSWORD}" # admin password set above
      LDAP_USES_NIS_SCHEMA: "false"
      LDAP_REQUIRE_STARTTLS: "false"
      EMAIL_DOMAIN: "" # email @this.part.here
      NO_HTTPS: "true"
      SMTP_HOSTNAME: "" # email SMTP
      SMTP_HOST_PORT: 465
      SMTP_USERNAME: "" # email username (usually your email)
      SMTP_PASSWORD: "" #email password
      SMTP_USE_TLS: "true"
      EMAIL_FROM_ADDRESS: "" # your email address
      REMOTE_HTTP_HEADERS_LOGIN: "TRUE"
      USERNAME_FORMAT: "{first_name}{last_name}"

######################################################
#     EXTERNAL ACCESS
#     192.168.4.200
######################################################
  nextcloud:
    image: linuxserver/nextcloud
    container_name: nextcloud
    depends_on:
      - mariadb
    networks:
      - internal
      - ingress
      - egress
    environment:
      - PUID
      - PGID
      - TZ
    volumes:
      - ${CONFIG_VOLUMES}/nextcloud/config:/config
      - ${MASS_VOLUMES}/nextcloud:/data
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.nextcloud.loadbalancer.server.port=443"
      - "traefik.http.services.nextcloud.loadbalancer.server.scheme=https"

  plex:
    container_name: plex
    image: plexinc/pms-docker:plexpass
    networks:
      plex_internal: {}
      lab_net:
        ipv4_address: ${SUBNET}.201
        aliases:
          - zeus
    environment:
      - TZ="America/Toronto"
      - PLEX_CLAIM=${PLEX_CLAIM}
      - PLEX_UID=${PUID}
      - PLEX_GID=${PGID}
      - CHANGE_CONFIG_DIR_OWNERSHIP=false
      - PLEX_UPDATE_CHANNEL=4
    devices:
      - /dev/dri:/dev/dri
    volumes:
      - ${CONFIG_VOLUMES}/plex/config:/config
      - "${MASS_VOLUMES}/plex/extra_data:/config/Library/Application Support/Plex Media Server/Media"
      - ${MASS_VOLUMES}/plex:/data
      - /dev/shm:/transcode
    restart: unless-stopped
    labels:
      - "traefik.enable=false"

  ombi:
    image: linuxserver/ombi
    container_name: ombi
    networks:
      - plex_internal
      - egress
    environment:
      - PUID
      - PGID
      - TZ
    volumes:
      - ${CONFIG_VOLUMES}/ombi:/config
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.ombi.loadbalancer.server.port=3579"

  tautulli:
    image: tautulli/tautulli
    container_name: tautulli
    networks:
      - plex_internal
      - egress
    environment:
      - TZ
      - PGID
      - PUID
    volumes:
      - ${CONFIG_VOLUMES}/tautulli:/config
      - ${CONFIG_VOLUMES}/plex/config/Library/Application Support/Plex Media Server/Logs:/plex_logs:ro
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.tautulli.loadbalancer.server.port=8181"

  calibre:
    image: linuxserver/calibre-web
    container_name: calibre
    profiles:
      - temp
    networks:
      - ingress
      - egress
    environment:
     - PUID
     - PGID
     - TZ
     - DOCKER_MODS=linuxserver/calibre-web:calibre
    volumes:
     - ${CONFIG_VOLUMES}/calibre-web/config:/config
     - ${CONFIG_VOLUMES}/calibre/config/Calibre Library:/books:ro
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.calibre.loadbalancer.server.port=8083"

  slackbot:
    image: marshallasch/slack-name-bot
    container_name: slackbot
    user: "${PUID}:${PGID}"
    profiles:
      - temp
    depends_on:
      - mongo
    networks:
      lab_net:
        ipv4_address: ${SUBNET}.205
    environment:
      - PUID
      - PGID
      - TZ
      - SLACK_ACCESS_TOKEN
      - SLACK_SIGNING_SECRET
      - DB_HOST=mongo
      - DB_USER=slackBot
      - DB_PASS=slackpass
      - DATABASE=slack_users
    volumes:
      - ${CONFIG_VOLUMES}/slackbot:/usr/src/app/config
    ports:
      - 9100:9100
    restart: unless-stopped
    labels:
      - "traefik.enable=false"

  photoprism:
    image: photoprism/photoprism:latest
    container_name: photoprism
    profiles:
      - temp
    depends_on:
      - mariadb_photos
    user: "${PUID}:${PGID}"
    networks:
      lab_net:
        ipv4_address: ${SUBNET}.206
    ports:
      - "2342:2342" # HTTP port (host:container)
    environment:
      - PHOTOPRISM_ADMIN_PASSWORD=insecure          # PLEASE CHANGE: Your initial admin password (min 4 characters)
      - PHOTOPRISM_SITE_URL=https://photoprism.${DOMAIN}/  # Public server URL incl http:// or https:// and /path, :port is optional
      - PHOTOPRISM_ORIGINALS_LIMIT=5000               # File size limit for originals in MB (increase for high-res video)
      - PHOTOPRISM_HTTP_COMPRESSION=gzip            # Improves transfer speed and bandwidth utilization (none or gzip)
      - PHOTOPRISM_DEBUG=false                      # Run in debug mode (shows additional log messages)
      - PHOTOPRISM_PUBLIC=false                     # No authentication required (disables password protection)
      - PHOTOPRISM_READONLY=false                   # Don't modify originals directory (reduced functionality)
      - PHOTOPRISM_EXPERIMENTAL=false               # Enables experimental features
      - PHOTOPRISM_DISABLE_CHOWN=false              # Disables storage permission updates on startup
      - PHOTOPRISM_DISABLE_WEBDAV=false             # Disables built-in WebDAV server
      - PHOTOPRISM_DISABLE_SETTINGS=false           # Disables Settings in Web UI
      - PHOTOPRISM_DISABLE_TENSORFLOW=false         # Disables all features depending on TensorFlow
      - PHOTOPRISM_DISABLE_FACES=false              # Disables facial recognition
      - PHOTOPRISM_DISABLE_CLASSIFICATION=false     # Disables image classification
      - PHOTOPRISM_DARKTABLE_PRESETS=false          # Enables Darktable presets and disables concurrent RAW conversion
      - PHOTOPRISM_DETECT_NSFW=true                # Flag photos as private that MAY be offensive (requires TensorFlow)
      - PHOTOPRISM_UPLOAD_NSFW=true                 # Allow uploads that MAY be offensive
      # PHOTOPRISM_DATABASE_DRIVER: "sqlite"         # SQLite is an embedded database that doesn't require a server
      - PHOTOPRISM_DATABASE_DRIVER=mysql            # Use MariaDB 10.5+ or MySQL 8+ instead of SQLite for improved performance
      - PHOTOPRISM_DATABASE_SERVER=mariadb_photos:3306     # MariaDB or MySQL database server (hostname:port)
      - PHOTOPRISM_DATABASE_NAME=photoprism         # MariaDB or MySQL database schema name
      - PHOTOPRISM_DATABASE_USER=photoprism         # MariaDB or MySQL database user name
      - PHOTOPRISM_DATABASE_PASSWORD=insecure       # MariaDB or MySQL database user password
      - PHOTOPRISM_SITE_TITLE=PhotoPrism
      - PHOTOPRISM_SITE_CAPTION=Browse Your Life
      - PHOTOPRISM_SITE_DESCRIPTION=My Amazing photos storage
      - PHOTOPRISM_SITE_AUTHOR=Marshall
      ## Set a non-root user, group, or custom umask if your Docker environment doesn't support this natively:
      # PHOTOPRISM_UID=1027
      # PHOTOPRISM_GID=100
      # PHOTOPRISM_UMASK: 0000
      ## Enable TensorFlow AVX2 support for modern Intel CPUs (requires starting the container as root):
      # PHOTOPRISM_INIT: "tensorflow-amd64-avx2"
      ## Hardware video transcoding config (optional):
      # PHOTOPRISM_FFMPEG_BUFFERS: "64"              # FFmpeg capture buffers (default: 32)
      # PHOTOPRISM_FFMPEG_BITRATE: "32"              # FFmpeg encoding bitrate limit in Mbit/s (default: 50)
      # PHOTOPRISM_FFMPEG_ENCODER: "h264_v4l2m2m"    # Use Video4Linux for AVC transcoding (default: libx264)
      # PHOTOPRISM_FFMPEG_ENCODER: "h264_qsv"        # Use Intel Quick Sync Video for AVC transcoding (default: libx264)
      # PHOTOPRISM_INIT: "intel-graphics tensorflow-amd64-avx2" # Enable TensorFlow AVX2 & Intel Graphics support
      - HOME=/photoprism
    ## Hardware devices for video transcoding and machine learning (optional):
    # devices:
    #  - "/dev/video11:/dev/video11" # Video4Linux (h264_v4l2m2m)
    #  - "/dev/dri/renderD128:/dev/dri/renderD128" # Intel GPU
    #  - "/dev/dri/card0:/dev/dri/card0"
    working_dir: "/photoprism"
    volumes:
      ## The *originals* folder contains your original photo and video files (- "[host folder]:/photoprism/originals"):
      - "${MASS_VOLUMES}/photoprism/originals:/photoprism/originals"
      - "${MASS_VOLUMES}/photoprism/import:/photoprism/import"
      ## Cache, session, thumbnail, and sidecar files will be created in the *storage* folder (never remove):
      - "${MASS_VOLUMES}/photoprism/storage:/photoprism/storage"
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.photoprism.loadbalancer.server.port=2342"

  collabora:
    image: collabora/code
    container_name: collabora
    networks:
      lab_net:
        ipv4_address: ${SUBNET}.207
    cap_add:
      - MKNOD
    environment:
      - "dictionaries=en_GB en_US"
      - domain=files.${DOMAIN}
      - username=admin
      - password=${COLLABORA_PASSWORD}
    restart: unless-stopped
    labels:
      - "traefik.enable=false"

  heimdall_public:
    image: linuxserver/heimdall
    networks:
      - plex_internal
      - egress
    environment:
      - PUID
      - PGID
      - TZ
    volumes:
      - ${CONFIG_VOLUMES}/heimdall_public:/config
    restart: unless-stopped
    labels:
      - "traefik.enable=false"

  botomir:
    image: marshallasch/botomir
    container_name: botomir
    networks:
      - ingress
      - egress
    environment:
      - TZ
    env_file:
      - ./botomir.env
    restart: unless-stopped
    labels:
      - "traefik.enable=false"

  road2ir_backend:
    image: road2ir_inventory_backend:latest
    networks:
      - egress
      - road2ir_internal
    volumes:
      - ${CONFIG_VOLUMES}/road2ir/backend:/config
    restart: unless-stopped
    labels:
      - "traefik.enable=false"

  road2ir_frontend:
    image: road2ir_inventory_frontend:latest
    networks:
      - egress
      - road2ir_internal
    restart: unless-stopped
    labels:
      - "traefik.enable=false"

  inventory_demo_backend:
    image: road2ir_inventory_backend:latest
    networks:
      - egress
      - road2ir_internal
    volumes:
      - ${CONFIG_VOLUMES}/road2ir_demo/backend:/config
    restart: unless-stopped
    labels:
      - "traefik.enable=false"

  inventory_demo_frontend:
    image: road2ir_inventory_frontend:latest
    networks:
      - egress
      - road2ir_internal
    restart: unless-stopped
    labels:
      - "traefik.enable=false"

  pigi_backend:
    image: road2ir_inventory_backend:latest
    networks:
      - egress
      - ingress
      - pigi_internal
    volumes:
      - ${CONFIG_VOLUMES}/pigi/backend:/config
    restart: unless-stopped
    labels:
      - "traefik.enable=false"

  pigi_frontend:
    image: road2ir_inventory_frontend:latest
    networks:
      - egress
      - ingress
      - pigi_internal
    restart: unless-stopped
    labels:
      - "traefik.enable=false"


  wrapped:
    image: aunefyren/wrapperr:latest
    networks:
      - plex_internal
      - ingress
      - egress
    ports:
      - 8282:8282
    environment:
      - TZ
    volumes:
      - ${CONFIG_VOLUMES}/wrapperr/:/app/config
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.wrapperr.loadbalancer.server.port=8282"

######################################################
#       done service list
#     temporary testing services
#       192.168.4.150-199
######################################################

  # this is the pimary DNS server
  # need to figure out a better secondary for the backup
  pihole:
    container_name: pihole
    image: pihole/pihole:latest
    networks:
      lab_net:
        ipv4_address: ${SUBNET}.150
        aliases:
           - dns1
    dns:
      - 127.0.0.1
      - 1.1.1.1
      - 1.0.0.1
    cap_add:
      - CAP_NET_BIND_SERVICE
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      - "67:67/udp"
      - "80:80/tcp"
      - "443:443/tcp"
    environment:
      - TZ
      - WEBPASSWORD=${DNS_WEB_PASSWORD}
      - ADMIN_EMAIL=${EMAIL}
      - DNSMASQ_USER=root
    volumes:
      - ${CONFIG_VOLUMES}/pihole/config:/etc/pihole
      - ${CONFIG_VOLUMES}/pihole/dnsmasq:/etc/dnsmasq.d
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.pihole.loadbalancer.server.port=443"
      - "traefik.http.services.pihole.loadbalancer.server.scheme=https"

  homeassistant:
    image: linuxserver/homeassistant
    container_name: homeassistant
    networks:
      ingress: {}
      lab_net:
        ipv4_address: ${SUBNET}.151
    environment:
     - PUID
     - PGID
     - TZ
    volumes:
     - ${CONFIG_VOLUMES}/homeassistant:/config
    ports:
     - 8123:80
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.homeassistant.loadbalancer.server.port=8123"

  authelia:
    image: authelia/authelia:4.38
    container_name: authelia
    networks:
      - plex_internal
      - egress
      - authelia_internal
    environment:
      TZ: "${TZ}"
      AUTHELIA_AUTHENTICATION_BACKEND_LDAP_PASSWORD_FILE: '/run/secrets/ldap_admin_password'
    volumes:
      - ${CONFIG_VOLUMES}/authelia:/config
    secrets:
      - ldap_admin_password
    restart: unless-stopped
    labels:
      - "traefik.enable=false"

  printer:
    image: thyrlian/air-pdf-printer
    hostname: printer
    profiles:
      - temp
    networks:
      lab_net:
        ipv4_address: ${SUBNET}.153
    volumes:
      - ${CONFIG_VOLUMES}/printer/pdf:/root/PDF
      - ${CONFIG_VOLUMES}/printer/cups:/var/spool/cups-pdf

  command-bot:
    image: marshallasch/discord-command-bot:latest
      #user: "${PUID}:${PGID}"
    profiles:
      - temp
    networks:
      - egress
    environment:
      - PUID
      - PGID
      - TZ
      - DISCORD_TOKEN=${COMMAND_DISCORD_TOKEN}
      - DISCORD_CLIENT_ID=${COMMAND_DISCORD_CLIENT_ID}
    volumes:
      - ${CONFIG_VOLUMES}/command-bot:/config
    restart: unless-stopped
    labels:
      - "traefik.enable=false"

  handbrake:
    image: jlesage/handbrake
    container_name: handbrake
    networks:
      lab_net:
        ipv4_address: ${SUBNET}.154
    environment:
     - PUID
     - PGID
     - TZ
     - USER_ID=$PUID
     - GROUP_ID=$PGID
    volumes:
     - ${CONFIG_VOLUMES}/handbrake/config:/config
     - ${CONFIG_VOLUMES}/handbrake/storage:/storage
     - ${CONFIG_VOLUMES}/handbrake/output:/output
    ports:
     - 5800:5800
    restart: unless-stopped
    labels:
      - "traefik.enable=false"

secrets:
  ldap_admin_password:
    environment: "LDAP_ADMIN_PASSWORD"

######################################################
#       NETWORK SETUP
######################################################
networks:
  internal:
    internal: true
  plex_internal:
    internal: true
  authelia_internal:
    internal: true
  road2ir_internal:
    internal: true
  pigi_internal:
    internal: true
  ingress:
    internal: true
  unifi:
    internal: true
  egress: {}
  lab_net:
    driver: macvlan
#    enable_ipv6: true
    driver_opts:
      parent: eno1
    ipam:
      driver: default
      config:
        - subnet: "${SUBNET}.0/24"
